name: Auto-merge Renovate PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]
  check_suite:
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    if: github.actor == 'renovate[bot]' || github.actor == 'renovate'
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request ||
                      await github.rest.pulls.get({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        pull_number: context.issue.number
                      }).then(r => r.data);

            core.setOutput('number', pr.number);
            core.setOutput('title', pr.title);
            core.setOutput('mergeable_state', pr.mergeable_state);
            core.setOutput('draft', pr.draft);

            return pr;

      - name: Check if PR should be auto-merged
        id: should_merge
        env:
          PR_TITLE: ${{ steps.pr.outputs.title }}
          PR_NUMBER: ${{ steps.pr.outputs.number }}
          MERGEABLE_STATE: ${{ steps.pr.outputs.mergeable_state }}
          IS_DRAFT: ${{ steps.pr.outputs.draft }}
        run: |
          echo "PR #$PR_NUMBER: $PR_TITLE"
          echo "Mergeable state: $MERGEABLE_STATE"
          echo "Draft: $IS_DRAFT"

          # Don't merge drafts
          if [ "$IS_DRAFT" = "true" ]; then
            echo "should_merge=false" >> $GITHUB_OUTPUT
            echo "reason=PR is in draft state" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Auto-merge criteria (based on renovate.json rules)
          SHOULD_MERGE=false
          REASON=""

          # Digest updates (immediate merge)
          if echo "$PR_TITLE" | grep -qi "digest"; then
            SHOULD_MERGE=true
            REASON="Digest-only update (low risk)"

          # Patch/minor updates for GitHub Actions
          elif echo "$PR_TITLE" | grep -qiE "update .*(action|workflow).*to v[0-9]+\.[0-9]+"; then
            SHOULD_MERGE=true
            REASON="GitHub Actions patch/minor update"

          # Patch updates for Docker images
          elif echo "$PR_TITLE" | grep -qiE "update .*(docker|image)"; then
            if ! echo "$PR_TITLE" | grep -qiE "to v[0-9]+\.0\.0|major"; then
              SHOULD_MERGE=true
              REASON="Docker image patch/minor update"
            else
              REASON="Major update requires manual review"
            fi

          # Major version updates - never auto-merge
          elif echo "$PR_TITLE" | grep -qiE "major|to v[0-9]+\.0\.0"; then
            REASON="Major update requires manual review"

          else
            REASON="Update type not recognized for auto-merge"
          fi

          echo "should_merge=$SHOULD_MERGE" >> $GITHUB_OUTPUT
          echo "reason=$REASON" >> $GITHUB_OUTPUT
          echo "Decision: $REASON"

      - name: Enable GitHub auto-merge
        if: steps.should_merge.outputs.should_merge == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            // Enable GitHub's native auto-merge feature
            // This will automatically merge the PR when all checks pass
            try {
              await github.graphql(`
                mutation($pullRequestId: ID!) {
                  enablePullRequestAutoMerge(input: {
                    pullRequestId: $pullRequestId,
                    mergeMethod: SQUASH
                  }) {
                    pullRequest {
                      id
                      autoMergeRequest {
                        enabledAt
                      }
                    }
                  }
                }
              `, {
                pullRequestId: context.payload.pull_request.node_id
              });

              console.log('✅ Auto-merge enabled - PR will merge when all checks pass');

              // Add a comment to explain what happened
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ steps.pr.outputs.number }},
                body: '✅ **Auto-merge enabled**\n\nReason: ${{ steps.should_merge.outputs.reason }}\n\nThis PR will automatically merge when all required checks pass.'
              });
            } catch (error) {
              console.error('Failed to enable auto-merge:', error);
              core.setFailed(`Could not enable auto-merge: ${error.message}`);
            }

      - name: Comment on PR (if not auto-merged)
        if: steps.should_merge.outputs.should_merge == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.pr.outputs.number }},
              body: '⏸️ **Auto-merge skipped**\n\nReason: ${{ steps.should_merge.outputs.reason }}\n\nThis PR requires manual review and approval.'
            });
